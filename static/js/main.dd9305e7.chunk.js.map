{"version":3,"sources":["components/Scoreboard/Scoreboard.module.css","components/Modal/Modal.module.css","components/WinnerMessage/WinnerMessage.module.css","components/Cell/Cell.module.css","App.module.css","components/Button/Button.module.css","components/WinningLine/WinningLine.module.css","components/Playfield/Playfield.module.css","constants.js","components/Button/Button.js","components/Modal/Modal.js","components/Cell/Cell.js","components/WinningLine/WinningLine.js","components/Playfield/Playfield.js","components/Scoreboard/Scoreboard.js","components/WinnerMessage/WinnerMessage.js","App.js","index.js"],"names":["module","exports","CROSS","CIRCLE","WINNING_LINES","Button","children","onClick","className","styles","button","type","Modal","onChange","backdrop","modal","header","form","input","placeholder","name","required","Cell","value","cellValue","container","cell","e","WinningLine","winArray","style","join","top","bottom","left","transform","right","line","Playfield","playfield","Scoreboard","nameX","nameO","scoreX","scoreO","nextMove","activePlayer","player","active","list","WinnerMessage","winner","info","App","useState","JSON","parse","stringify","clickedCells","setClickedCells","modalIsOpen","setModalIsOpen","playerMove","setPlayerMove","setNameX","setNameO","setScoreX","setScoreO","setWinner","movesCount","setMovesCount","Array","fill","setCellValue","setWinArray","makeFirstMove","dice","Math","round","random","alert","target","innerHTML","figure","result","map","index","indexOf","Number","changeCell","i","forEach","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,6B,gBCA7KD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,OAAS,wB,gBCAvJD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,KAAO,8B,iBCAtED,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,QAAU,wB,iBCA1FD,EAAOC,QAAU,CAAC,UAAY,yB,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,8ICDjBC,EAAQ,IACRC,EAAS,IAETC,EAAgB,CAC3B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,I,wBCRM,SAASC,EAAT,GAAwC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACzC,OACE,wBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASJ,QAASA,EAAzD,SACGD,ICFQ,SAASM,EAAT,GAAuC,IAAtBL,EAAqB,EAArBA,QAASM,EAAY,EAAZA,SACvC,OACE,qBAAKL,UAAWC,IAAOK,SAAvB,SACE,sBAAKN,UAAWC,IAAOM,MAAvB,UACE,oBAAIP,UAAWC,IAAOO,OAAtB,8BACA,uBAAMR,UAAWC,IAAOQ,KAAxB,UACE,uBACET,UAAWC,IAAOS,MAClBC,YAAY,kBACZC,KAAMlB,EACNW,SAAUA,EACVQ,UAAQ,IAEV,uBACEb,UAAWC,IAAOS,MAClBC,YAAY,mBACZC,KAAMjB,EACNU,SAAUA,EACVQ,UAAQ,OAGZ,cAAChB,EAAD,CAAQE,QAASA,EAAjB,8B,oBCtBO,SAASe,EAAT,GAA8C,IAA9BC,EAA6B,EAA7BA,MAAOhB,EAAsB,EAAtBA,QAASiB,EAAa,EAAbA,UAC7C,OACE,qBAAKhB,UAAWC,IAAOgB,UAAvB,SACE,wBACEd,KAAK,SACLH,UAAWC,IAAOiB,KAClBH,MAAOA,EACPhB,QAAS,SAACoB,GAAD,OAAOpB,EAAQoB,IAJ1B,SAMGH,EAAUD,O,qBCTJ,SAASK,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,GAAKA,EAAL,CAGA,IAAIC,EACJ,OAAQD,EAASE,KAAK,KACpB,IAAK,MACHD,EAAQ,CACNE,IAAK,OAEP,MAEF,IAAK,MACHF,EAAQ,CACNG,OAAQ,OAEV,MAEF,IAAK,MACHH,EAAQ,CACNI,KAAM,OACNC,UAAW,iBAEb,MAEF,IAAK,MACHL,EAAQ,CACNI,KAAM,MACNC,UAAW,iBAEb,MAEF,IAAK,MACHL,EAAQ,CACNI,KAAM,OACNC,UAAW,kBAEb,MAEF,IAAK,MACHL,EAAQ,CACNM,MAAO,OACPD,UAAW,iBAEb,MAEF,IAAK,MACHL,EAAQ,CACNK,UAAW,iBAOjB,OAAO,qBAAKL,MAAOA,EAAOtB,UAAWC,IAAO4B,Q,qBCtD/B,SAASC,EAAT,GAAsD,IAAjC/B,EAAgC,EAAhCA,QAASiB,EAAuB,EAAvBA,UAAWK,EAAY,EAAZA,SACtD,OACE,sBAAKrB,UAAWC,IAAO8B,UAAvB,UACE,cAACjB,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC7C,cAACF,EAAD,CAAMC,MAAO,EAAGhB,QAASA,EAASiB,UAAWA,IAC5CK,GAAY,cAACD,EAAD,CAAaC,SAAUA,O,oBCZ3B,SAASW,EAAT,GAAiE,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC3DC,EAAe,CAACrC,IAAOsC,OAAQtC,IAAOuC,QAAQjB,KAAK,KACzD,OACE,sBAAKvB,UAAWC,IAAOgB,UAAvB,UACE,oBAAIjB,UAAWC,IAAOO,OAAtB,mBACA,qBAAIR,UAAWC,IAAOwC,KAAtB,UACE,qBAAIzC,UAAWqC,IAAa3C,EAAQ4C,EAAerC,IAAOsC,OAA1D,UACGN,EADH,KACYE,KAEZ,qBAAInC,UAAWqC,IAAa1C,EAAS2C,EAAerC,IAAOsC,OAA3D,UACGL,EADH,KACYE,W,oBCZL,SAASM,EAAT,GAA6C,IAApBC,EAAmB,EAAnBA,OAAQ5C,EAAW,EAAXA,QAC9C,OACE,sBAAKC,UAAWC,IAAOgB,UAAvB,UACG0B,EACC,yBAAQ3C,UAAWC,IAAO2C,KAA1B,2BAA+CD,EAA/C,OAEA,wBAAQ3C,UAAWC,IAAO2C,KAA1B,0BAEF,cAAC/C,EAAD,CAAQE,QAASA,EAAjB,wBCDS,SAAS8C,IACtB,MAAwCC,mBACtCC,KAAKC,MAAMD,KAAKE,UAAUrD,KAD5B,mBAAOsD,EAAP,KAAqBC,EAArB,KAGA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAoCP,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KACA,EAA0BT,mBAAS,IAAnC,mBAAOb,EAAP,KAAcuB,EAAd,KACA,EAA0BV,mBAAS,IAAnC,mBAAOZ,EAAP,KAAcuB,EAAd,KACA,EAA4BX,mBAAS,GAArC,mBAAOX,EAAP,KAAeuB,EAAf,KACA,EAA4BZ,mBAAS,GAArC,mBAAOV,EAAP,KAAeuB,EAAf,KACA,EAA4Bb,mBAAS,IAArC,mBAAOH,EAAP,KAAeiB,EAAf,KACA,EAAoCd,mBAAS,GAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KACA,EAAkChB,mBAASiB,MAAM,GAAGC,KAAK,KAAzD,mBAAOhD,EAAP,KAAkBiD,EAAlB,KACA,EAAgCnB,mBAAS,IAAzC,mBAAOzB,EAAP,KAAiB6C,GAAjB,KAqDMC,GAAgB,WACpB,IAAMC,EAAOC,KAAKC,MAAMD,KAAKE,UAChBhB,EAAJ,IAATa,EAA2B1E,EAAuBC,IAyBpD,OACE,mCACGyD,EACC,cAAChD,EAAD,CAAOL,QArBQ,WACL,KAAVkC,GAA0B,KAAVC,GAIpBiC,KARAd,GAAgBD,IAKdoB,MAAM,4BAmB0BnE,SAnCpB,SAACc,GACf,MAAwBA,EAAEsD,OAAlB7D,EAAR,EAAQA,KAAMG,EAAd,EAAcA,MACdH,IAASlB,EAAQ8D,EAASzC,GAAS0C,EAAS1C,MAmCxC,gCACE,sBAAKf,UAAWC,IAAOgB,UAAvB,UACE,cAACa,EAAD,CACE/B,QA5DQ,SAACoB,GACnB,GAA2B,MAAvBA,EAAEsD,OAAOC,WAA4C,MAAvBvD,EAAEsD,OAAOC,YAAqB/B,EAAhE,CAGA,IAAQ5B,EAAUI,EAAEsD,OAAZ1D,OA9BS,SAACA,EAAO4D,GACzB,IAAMC,EAAS1B,EAAa2B,KAAI,SAAC1D,GAC/B,IAAM2D,EAAQ3D,EAAE4D,QAAQC,OAAOjE,IAI/B,OAHe,IAAX+D,IACF3D,EAAE2D,GAASH,GAENxD,KAETgC,EAAgByB,GAwBhBK,CAAWlE,EAAOuC,GAClBQ,EAAcD,EAAa,GAC3BI,EACEjD,EAAU6D,KAAI,SAAC1D,EAAG+D,GAChB,OAAIA,IAAMF,OAAOjE,GACRuC,EAEFnC,MA3BX+B,EAAaiC,SAAQ,SAAChE,EAAG+D,GACvB,GAAmB,QAAf/D,EAAEI,KAAK,IAIT,OAHA2C,GAAYtE,EAAcsF,IAC1BxB,EAAUvB,EAAS,QACnByB,EAAU3B,GAEc,QAAfd,EAAEI,KAAK,MAChB2C,GAAYtE,EAAcsF,IAC1BvB,EAAUvB,EAAS,GACnBwB,EAAU1B,OAsBdqB,EAAcD,IAAe5D,EAAQC,EAASD,KA4CpCsB,UAAWA,EACXK,SAAUA,IAEZ,cAACW,EAAD,CACEC,MAAOA,EACPC,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRC,SAAUiB,QAGZX,GAAyB,IAAfkB,IACV,cAACnB,EAAD,CAAeC,OAAQA,EAAQ5C,QA9BlB,SAACoB,GACtBgC,EAAgBJ,KAAKC,MAAMD,KAAKE,UAAUrD,KAC1CsE,GAAY,IACZJ,EAAc,GACdF,EAAU,IACVK,EAAaF,MAAM,GAAGC,KAAK,KAC3BG,aC9FJiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACzC,EAAD,MAEF0C,SAASC,eAAe,W","file":"static/js/main.dd9305e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Scoreboard_container__fNpc0\",\"header\":\"Scoreboard_header__545n7\",\"list\":\"Scoreboard_list__19JuV\",\"player\":\"Scoreboard_player__Exdai\",\"active\":\"Scoreboard_active__1q5xt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__HovbW\",\"modal\":\"Modal_modal__1GqNp\",\"header\":\"Modal_header__2VVXL\",\"input\":\"Modal_input__2TiA_\",\"button\":\"Modal_button__1-WyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WinnerMessage_container__3zu3h\",\"info\":\"WinnerMessage_info__3wpL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cell_container__23nQO\",\"cell\":\"Cell_cell__3SGLu\",\"winning\":\"Cell_winning__ca1vF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Znay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__oXVai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"line\":\"WinningLine_line__2BHr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playfield\":\"Playfield_playfield__3BqzY\"};","export const CROSS = \"X\";\r\nexport const CIRCLE = \"O\";\r\nexport const DRAW = \"draw\";\r\nexport const WINNING_LINES = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [0, 4, 8],\r\n  [2, 4, 6],\r\n];\r\n","import React from \"react\";\r\nimport styles from \"./Button.module.css\";\r\n\r\nexport default function Button({ children, onClick }) {\r\n  return (\r\n    <button className={styles.button} type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import styles from \"./Modal.module.css\";\r\nimport { CROSS, CIRCLE } from \"../../constants\";\r\nimport Button from \"../Button\";\r\n\r\nexport default function Modal({ onClick, onChange }) {\r\n  return (\r\n    <div className={styles.backdrop}>\r\n      <div className={styles.modal}>\r\n        <h2 className={styles.header}>Enter your names</h2>\r\n        <form className={styles.form}>\r\n          <input\r\n            className={styles.input}\r\n            placeholder=\"Cross team name\"\r\n            name={CROSS}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n          <input\r\n            className={styles.input}\r\n            placeholder=\"Circle team name\"\r\n            name={CIRCLE}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </form>\r\n        <Button onClick={onClick}>Let's play!</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Cell.module.css\";\r\n\r\nexport default function Cell({ value, onClick, cellValue }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.cell}\r\n        value={value}\r\n        onClick={(e) => onClick(e)}\r\n      >\r\n        {cellValue[value]}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./WinningLine.module.css\";\r\n\r\nexport default function WinningLine({ winArray }) {\r\n  if (!winArray) {\r\n    return;\r\n  }\r\n  let style;\r\n  switch (winArray.join(\"\")) {\r\n    case \"012\":\r\n      style = {\r\n        top: \"15%\",\r\n      };\r\n      break;\r\n\r\n    case \"678\":\r\n      style = {\r\n        bottom: \"15%\",\r\n      };\r\n      break;\r\n\r\n    case \"036\":\r\n      style = {\r\n        left: \"-25%\",\r\n        transform: \"rotate(90deg)\",\r\n      };\r\n      break;\r\n\r\n    case \"258\":\r\n      style = {\r\n        left: \"41%\",\r\n        transform: \"rotate(90deg)\",\r\n      };\r\n      break;\r\n\r\n    case \"246\":\r\n      style = {\r\n        left: \"7.5%\",\r\n        transform: \"rotate(135deg)\",\r\n      };\r\n      break;\r\n\r\n    case \"147\":\r\n      style = {\r\n        right: \"7.5%\",\r\n        transform: \"rotate(90deg)\",\r\n      };\r\n      break;\r\n\r\n    case \"048\":\r\n      style = {\r\n        transform: \"rotate(45deg)\",\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return <div style={style} className={styles.line}></div>;\r\n}\r\n","import Cell from \"../Cell\";\r\nimport WinningLine from \"../WinningLine\";\r\nimport styles from \"./Playfield.module.css\";\r\n\r\nexport default function Playfield({ onClick, cellValue, winArray }) {\r\n  return (\r\n    <div className={styles.playfield}>\r\n      <Cell value={0} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={1} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={2} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={3} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={4} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={5} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={6} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={7} onClick={onClick} cellValue={cellValue} />\r\n      <Cell value={8} onClick={onClick} cellValue={cellValue} />\r\n      {winArray && <WinningLine winArray={winArray} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Scoreboard.module.css\";\r\nimport { CROSS, CIRCLE } from \"../../constants\";\r\n\r\nexport default function Scoreboard({ nameX, nameO, scoreX, scoreO, nextMove }) {\r\n  const activePlayer = [styles.player, styles.active].join(\" \");\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.header}>Score</h2>\r\n      <ul className={styles.list}>\r\n        <li className={nextMove === CROSS ? activePlayer : styles.player}>\r\n          {nameX}: {scoreX}\r\n        </li>\r\n        <li className={nextMove === CIRCLE ? activePlayer : styles.player}>\r\n          {nameO}: {scoreO}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import styles from \"./WinnerMessage.module.css\";\r\nimport Button from \"../Button\";\r\nexport default function WinnerMessage({ winner, onClick }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      {winner ? (\r\n        <strong className={styles.info}>The winner is {winner}!</strong>\r\n      ) : (\r\n        <strong className={styles.info}>It's a draw!</strong>\r\n      )}\r\n      <Button onClick={onClick}>Restart</Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport Playfield from \"./components/Playfield\";\r\nimport Scoreboard from \"./components/Scoreboard\";\r\nimport WinnerMessage from \"./components/WinnerMessage\";\r\n\r\nimport { CROSS, CIRCLE, WINNING_LINES } from \"./constants\";\r\n\r\nexport default function App() {\r\n  const [clickedCells, setClickedCells] = useState(\r\n    JSON.parse(JSON.stringify(WINNING_LINES))\r\n  );\r\n  const [modalIsOpen, setModalIsOpen] = useState(true);\r\n  const [playerMove, setPlayerMove] = useState(\"\");\r\n  const [nameX, setNameX] = useState(\"\");\r\n  const [nameO, setNameO] = useState(\"\");\r\n  const [scoreX, setScoreX] = useState(0);\r\n  const [scoreO, setScoreO] = useState(0);\r\n  const [winner, setWinner] = useState(\"\");\r\n  const [movesCount, setMovesCount] = useState(0);\r\n  const [cellValue, setCellValue] = useState(Array(9).fill(\"\"));\r\n  const [winArray, setWinArray] = useState(\"\");\r\n\r\n  const changeCell = (value, figure) => {\r\n    const result = clickedCells.map((e) => {\r\n      const index = e.indexOf(Number(value));\r\n      if (index !== -1) {\r\n        e[index] = figure;\r\n      }\r\n      return e;\r\n    });\r\n    setClickedCells(result);\r\n  };\r\n\r\n  const defineWinner = () => {\r\n    clickedCells.forEach((e, i) => {\r\n      if (e.join(\"\") === \"XXX\") {\r\n        setWinArray(WINNING_LINES[i]);\r\n        setScoreX(scoreX + 1);\r\n        setWinner(nameX);\r\n        return;\r\n      } else if (e.join(\"\") === \"OOO\") {\r\n        setWinArray(WINNING_LINES[i]);\r\n        setScoreO(scoreO + 1);\r\n        setWinner(nameO);\r\n      }\r\n    });\r\n  };\r\n\r\n  const clickOnCell = (e) => {\r\n    if (e.target.innerHTML === \"X\" || e.target.innerHTML === \"O\" || winner) {\r\n      return;\r\n    }\r\n    const { value } = e.target;\r\n\r\n    changeCell(value, playerMove);\r\n    setMovesCount(movesCount + 1);\r\n    setCellValue(\r\n      cellValue.map((e, i) => {\r\n        if (i === Number(value)) {\r\n          return playerMove;\r\n        }\r\n        return e;\r\n      })\r\n    );\r\n    defineWinner();\r\n    setPlayerMove(playerMove === CROSS ? CIRCLE : CROSS);\r\n  };\r\n\r\n  const setName = (e) => {\r\n    const { name, value } = e.target;\r\n    name === CROSS ? setNameX(value) : setNameO(value);\r\n  };\r\n\r\n  const makeFirstMove = () => {\r\n    const dice = Math.round(Math.random());\r\n    dice === 1 ? setPlayerMove(CROSS) : setPlayerMove(CIRCLE);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModalIsOpen(!modalIsOpen);\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    if (nameX === \"\" || nameO === \"\") {\r\n      alert(\"Please enter your names\");\r\n      return;\r\n    }\r\n    makeFirstMove();\r\n    toggleModal();\r\n  };\r\n\r\n  const restartTheGame = (e) => {\r\n    setClickedCells(JSON.parse(JSON.stringify(WINNING_LINES)));\r\n    setWinArray(\"\");\r\n    setMovesCount(0);\r\n    setWinner(\"\");\r\n    setCellValue(Array(9).fill(\"\"));\r\n    makeFirstMove();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {modalIsOpen ? (\r\n        <Modal onClick={onCloseModal} onChange={setName} />\r\n      ) : (\r\n        <div>\r\n          <div className={styles.container}>\r\n            <Playfield\r\n              onClick={clickOnCell}\r\n              cellValue={cellValue}\r\n              winArray={winArray}\r\n            />\r\n            <Scoreboard\r\n              nameX={nameX}\r\n              nameO={nameO}\r\n              scoreX={scoreX}\r\n              scoreO={scoreO}\r\n              nextMove={playerMove}\r\n            />\r\n          </div>\r\n          {(winner || movesCount === 9) && (\r\n            <WinnerMessage winner={winner} onClick={restartTheGame} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}